AWSTemplateFormatVersion: 2010-09-09
Conditions:
  CreateCodeBuildResources: !Equals
  - true
  - true
  CreateWebSiteS3Bucket: !Equals
  - true
  - false
  UseSubnet: !Not
  - !Equals
    - !Ref 'SubnetId'
    - subnet-none
Description: Node app pipeline.
Metadata:
  AWS::CloudFormation::Interface:
    ParameterGroups:
    - Label:
        default: Application
      Parameters:
      - ProjectId
  CodeBuildImage: aws/codebuild/eb-nodejs-6.10.0-amazonlinux-64:4.0.0
  CodeBuildImageOverride: aws/codebuild/eb-nodejs-6.10.0-amazonlinux-64:4.0.0
  CreateCodeBuild: true
  ProjectTemplateId: webapp-nodeexpress-ec2
  WebsiteS3Bucket: AWS::NoValue
Parameters:
  AppName:
    Description: Name of the application.
    Default: BootCampApp
    MaxLength: 100
    MinLength: 1
    Type: String
  InstanceType:
    Default: t2.micro
    Description: The Amazon EC2 instance type to use.
    Type: String
  KeyPairName:
    Description: The name of the key pair used to make SSH connections to Amazon EC2 instances.
    Type: AWS::EC2::KeyPair::KeyName
  ProjectId:
    AllowedPattern: ^[a-z]([a-z0-9-])+$
    Default: bootcampapp
    ConstraintDescription: Project IDs must be between 2 and 15 characters, begin with a letter, and only contain lowercase letters, numbers, and hyphens (-).
    Description: Project ID.
    MaxLength: 15
    MinLength: 2
    Type: String
  RepositoryName:
    Description: AWS CodeCommit repository name.
    Default: BootCampRepo
    MaxLength: 100
    MinLength: 1
    Type: String
  SubnetId:
    Default: subnet-none
    Description: The name of the VPC subnet to use for Amazon EC2 instances launched for this project.
    Type: String
  VpcId:
    Description: The ID of the Amazon Virtual Private Cloud (VPC) to use for Amazon EC2 instances.
    Type: AWS::EC2::VPC::Id
Resources:
  CloudFormationTrustRole:
    Description: Creating service role in IAM for AWS CloudFormation
    Properties:
      AssumeRolePolicyDocument:
        Statement:
        - Action: sts:AssumeRole
          Effect: Allow
          Principal:
            Service:
            - cloudformation.amazonaws.com
      Path: /
      Policies:
      - PolicyDocument:
          Statement:
          - Action:
            - codestar:SyncResources
            - dynamodb:CreateTable
            - dynamodb:DeleteTable
            - dynamodb:DescribeTable
            - kinesis:CreateStream
            - kinesis:DeleteStream
            - kinesis:DescribeStream
            - s3:CreateBucket
            - s3:DeleteBucket
            - sns:CreateTopic
            - sns:DeleteTopic
            - sns:GetTopicAttributes
            - sns:ListTopics
            - sns:SetTopicAttributes
            - ec2:*
            - autoscaling:*
            - elasticloadbalancing:*
            Effect: Allow
            Resource:
            - '*'
          - Action:
            - cloudformation:CreateChangeSet
            Effect: Allow
            Resource:
            - arn:aws:cloudformation:eu-west-1:aws:transform/Serverless-2016-10-31
            - arn:aws:cloudformation:eu-west-1:aws:transform/CodeStar
          - Action:
            - iam:PassRole
            Effect: Allow
            Resource:
            - !GetAtt 'WebAppRole.Arn'
        PolicyName: CodeStarWorkerCloudFormationRolePolicy
      RoleName: !Sub 'CodeStarWorker-${ProjectId}-CloudFormation'
    Type: AWS::IAM::Role
  CodeBuildPolicy:
    Condition: CreateCodeBuildResources
    Description: Setting IAM policy for service role for Amazon EC2 instances
    Properties:
      PolicyDocument:
        Statement:
        - Action:
          - logs:CreateLogGroup
          - logs:CreateLogStream
          - logs:PutLogEvents
          Effect: Allow
          Resource: '*'
        - Action:
          - s3:PutObject
          - s3:GetObject
          - s3:GetObjectVersion
          Effect: Allow
          Resource:
          - !Join
            - ''
            - - 'arn:aws:s3:::'
              - !Ref 'S3Bucket'
          - !Join
            - ''
            - - 'arn:aws:s3:::'
              - !Ref 'S3Bucket'
              - /*
        - !If
          - CreateWebSiteS3Bucket
          - Action:
            - s3:PutObject*
            - s3:GetObject
            - s3:GetObjectVersion
            Effect: Allow
            Resource:
            - !Join
              - ''
              - - 'arn:aws:s3:::'
                - !Ref 'AWS::NoValue'
            - !Join
              - ''
              - - 'arn:aws:s3:::'
                - !Ref 'AWS::NoValue'
                - /*
          - !Ref 'AWS::NoValue'
        - Action:
          - codecommit:GitPull
          Effect: Allow
          Resource:
          - !Join
            - ':'
            - - arn
              - aws
              - codecommit
              - !Ref 'AWS::Region'
              - !Ref 'AWS::AccountId'
              - !Ref 'RepositoryName'
        - Action:
          - kms:GenerateDataKey*
          - kms:Encrypt
          - kms:Decrypt
          Effect: Allow
          Resource:
          - !Join
            - ':'
            - - arn:aws:kms
              - !Ref 'AWS::Region'
              - !Ref 'AWS::AccountId'
              - !Join
                - /
                - - alias
                  - aws/s3
      PolicyName: CodeStarWorkerCodeBuildPolicy
      Roles:
      - !Ref 'CodeBuildRole'
    Type: AWS::IAM::Policy
  CodeBuildProject:
    Condition: CreateCodeBuildResources
    DependsOn:
    - CodeBuildPolicy
    Properties:
      Artifacts:
        Packaging: zip
        Type: codepipeline
      Description: !Join
      - ''
      - - 'CodeBuild Project for '
        - !Ref 'AppName'
      Environment:
        ComputeType: small
        EnvironmentVariables:
        - Name: S3_BUCKET
          Value: !Ref 'S3Bucket'
        - Name: WEBSITE_S3_PREFIX
          Value: !If
          - CreateWebSiteS3Bucket
          - !Join
            - ''
            - - https://s3-eu-west-1.amazonaws.com/
              - !Ref 'AWS::NoValue'
          - NoVal
        - Name: WEBSITE_S3_BUCKET
          Value: !If
          - CreateWebSiteS3Bucket
          - !Ref 'AWS::NoValue'
          - NoVal
        Image: aws/codebuild/eb-nodejs-6.10.0-amazonlinux-64:4.0.0
        Type: LINUX_CONTAINER
      Name: !Ref 'ProjectId'
      ServiceRole: !Ref 'CodeBuildRole'
      Source:
        Type: codepipeline
    Type: AWS::CodeBuild::Project
  CodeBuildRole:
    Condition: CreateCodeBuildResources
    Description: Creating service role in IAM for Amazon EC2 instances
    Properties:
      AssumeRolePolicyDocument:
        Statement:
        - Action: sts:AssumeRole
          Effect: Allow
          Principal:
            Service: codebuild.amazonaws.com
      Path: /
      RoleName: !Join
      - '-'
      - - CodeStarWorker
        - !Ref 'ProjectId'
        - CodeBuild
    Type: AWS::IAM::Role
  CodeCommitRepo:
    Description: Creating AWS CodeCommit repository for application source code
    Properties:
      RepositoryDescription: !Join
      - ''
      - - !Ref 'ProjectId'
        - ' project repository'
      RepositoryName: !Ref 'RepositoryName'
    Type: AWS::CodeCommit::Repository
  CodeDeployApplication:
    Description: Configuring AWS CodeDeploy for project application
    Properties:
      ApplicationName: !Ref 'ProjectId'
    Type: AWS::CodeDeploy::Application
  CodeDeployTrustRole:
    Description: Creating service role in IAM for AWS CodeDeploy
    Properties:
      AssumeRolePolicyDocument:
        Statement:
        - Action: sts:AssumeRole
          Effect: Allow
          Principal:
            Service:
            - codedeploy.amazonaws.com
          Sid: ''
      Path: /
      Policies:
      - PolicyDocument:
          Statement:
          - Action:
            - ec2:DescribeInstances
            - ec2:DescribeInstanceStatus
            - autoscaling:CompleteLifecycleAction
            - autoscaling:DeleteLifecycleHook
            - autoscaling:DescribeAutoScalingGroups
            - autoscaling:DescribeLifecycleHooks
            - autoscaling:PutLifecycleHook
            - autoscaling:RecordLifecycleActionHeartbeat
            Effect: Allow
            Resource:
            - '*'
        PolicyName: CodeStarWorkerCodeDeployPolicy
      RoleName: !Join
      - '-'
      - - CodeStarWorker
        - !Ref 'ProjectId'
        - CodeDeploy
    Type: AWS::IAM::Role
  CodePipelineTrustRole:
    Description: Creating service role in IAM for AWS CodePipeline
    Properties:
      AssumeRolePolicyDocument:
        Statement:
        - Action: sts:AssumeRole
          Effect: Allow
          Principal:
            Service:
            - codepipeline.amazonaws.com
          Sid: 1
      Path: /
      Policies:
      - PolicyDocument:
          Statement:
          - Action:
            - s3:GetObject
            - s3:GetObjectVersion
            - s3:GetBucketVersioning
            - s3:PutObject
            Effect: Allow
            Resource:
            - !Sub 'arn:aws:s3:::${S3Bucket}'
            - !Sub 'arn:aws:s3:::${S3Bucket}/*'
          - Action:
            - codecommit:CancelUploadArchive
            - codecommit:GetBranch
            - codecommit:GetCommit
            - codecommit:GetUploadArchiveStatus
            - codecommit:UploadArchive
            Effect: Allow
            Resource:
            - !Sub 'arn:aws:codecommit:${AWS::Region}:${AWS::AccountId}:${RepositoryName}'
          - Action:
            - codebuild:StartBuild
            - codebuild:BatchGetBuilds
            - codebuild:StopBuild
            Effect: Allow
            Resource:
            - !GetAtt 'CodeBuildProject.Arn'
          - Action:
            - cloudformation:DescribeStacks
            - cloudformation:DescribeChangeSet
            - cloudformation:CreateChangeSet
            - cloudformation:DeleteChangeSet
            - cloudformation:ExecuteChangeSet
            Effect: Allow
            Resource:
            - !Sub 'arn:aws:cloudformation:${AWS::Region}:${AWS::AccountId}:stack/awscodestar-${ProjectId}-infrastructure/*'
          - Action:
            - codedeploy:CreateDeployment
            - codedeploy:GetApplicationRevision
            - codedeploy:GetDeployment
            - codedeploy:GetDeploymentConfig
            - codedeploy:RegisterApplicationRevision
            Effect: Allow
            Resource:
            - !Sub 'arn:aws:codedeploy:${AWS::Region}:${AWS::AccountId}:application:${CodeDeployApplication}'
            - !Sub 'arn:aws:codedeploy:${AWS::Region}:${AWS::AccountId}:deploymentgroup:${CodeDeployApplication}/${DeploymentGroup}'
            - !Sub 'arn:aws:codedeploy:${AWS::Region}:${AWS::AccountId}:deploymentconfig:*'
          - Action:
            - iam:PassRole
            Effect: Allow
            Resource:
            - !GetAtt 'CloudFormationTrustRole.Arn'
        PolicyName: CodeStarWorkerCodePipelineRolePolicy
      RoleName: !Sub 'CodeStarWorker-${ProjectId}-CodePipeline'
    Type: AWS::IAM::Role
  # CodeStarProject:
  #   Description: Starting project creation
  #   Properties:
  #     ProjectDescription: AWS CodeStar created project
  #     ProjectId: !Ref 'ProjectId'
  #     ProjectName: !Ref 'AppName'
  #     ProjectTemplateId: arn:aws:codestar:eu-west-1::project-template/codecommit/webapp-nodeexpress-ec2
  #     StackId: !Ref 'AWS::StackId'
  #   Type: AWS::CodeStar::Project
  #   Version: 1.0
  DeploymentGroup:
    Description: Creating AWS CodeDeploy deployment groups for project application
    Properties:
      ApplicationName: !Ref 'CodeDeployApplication'
      DeploymentConfigName: CodeDeployDefault.AllAtOnce
      DeploymentGroupName: !Join
      - ''
      - - !Ref 'ProjectId'
        - -Env
      Ec2TagFilters:
      - Key: Environment
        Type: KEY_AND_VALUE
        Value: !Join
        - ''
        - - !Ref 'ProjectId'
          - -WebApp
      ServiceRoleArn: !GetAtt
      - CodeDeployTrustRole
      - Arn
    Type: AWS::CodeDeploy::DeploymentGroup
  ProjectPipeline:
    DependsOn:
    # - SeedRepo
    - CodePipelineTrustRole
    - S3Bucket
    - CodeBuildProject
    - CloudFormationTrustRole
    Description: Creating a deployment pipeline for your project in AWS CodePipeline
    Properties:
      ArtifactStore:
        Location: !Ref 'S3Bucket'
        Type: S3
      Name: !Sub '${ProjectId}-Pipeline'
      RoleArn: !GetAtt 'CodePipelineTrustRole.Arn'
      Stages:
      - Actions:
        - ActionTypeId:
            Category: Source
            Owner: AWS
            Provider: CodeCommit
            Version: 1
          Configuration:
            BranchName: master
            PollForSourceChanges: false
            RepositoryName: !Ref 'RepositoryName'
          InputArtifacts: [
            ]
          Name: ApplicationSource
          OutputArtifacts:
          - Name: !Sub '${ProjectId}-SourceArtifact'
          RunOrder: 1
        Name: Source
      - Actions:
        - ActionTypeId:
            Category: Build
            Owner: AWS
            Provider: CodeBuild
            Version: 1
          Configuration:
            ProjectName: !Ref 'ProjectId'
          InputArtifacts:
          - Name: !Sub '${ProjectId}-SourceArtifact'
          Name: PackageExport
          OutputArtifacts:
          - Name: !Sub '${ProjectId}-BuildArtifact'
          RunOrder: 1
        Name: Build
      # - Actions:
      #   - ActionTypeId:
      #       Category: Deploy
      #       Owner: AWS
      #       Provider: CloudFormation
      #       Version: 1
      #     Configuration:
      #       ActionMode: CHANGE_SET_REPLACE
      #       Capabilities: CAPABILITY_NAMED_IAM
      #       ChangeSetName: pipeline-changeset
      #       ParameterOverrides: !Sub "{\n  \"ProjectId\":\"${ProjectId}\",\n  \"InstanceType\"\
      #         :\"${InstanceType}\",\n  \"WebAppInstanceProfile\":\"${WebAppInstanceProfile}\"\
      #         ,\n  \"ImageId\":\"ami-f9dd458a\",\n  \"KeyPairName\":\"${KeyPairName}\"\
      #         ,\n  \"SubnetId\":\"${SubnetId}\",\n  \"VpcId\":\"${VpcId}\"\n}\n"
      #       RoleArn: !GetAtt 'CloudFormationTrustRole.Arn'
      #       StackName: !Sub 'awscodestar-${ProjectId}-infrastructure'
      #       TemplatePath: !Sub '${ProjectId}-BuildArtifact::template.yml'
      #     InputArtifacts:
      #     - Name: !Sub '${ProjectId}-BuildArtifact'
      #     Name: GenerateChangeSet
      #     OutputArtifacts: [
      #       ]
      #     RunOrder: 1
      #   - ActionTypeId:
      #       Category: Deploy
      #       Owner: AWS
      #       Provider: CloudFormation
      #       Version: 1
      #     Configuration:
      #       ActionMode: CHANGE_SET_EXECUTE
      #       ChangeSetName: pipeline-changeset
      #       StackName: !Sub 'awscodestar-${ProjectId}-infrastructure'
      #     InputArtifacts: [
      #       ]
      #     Name: ExecuteChangeSet
      #     OutputArtifacts: [
      #       ]
      #     RunOrder: 2
      #   - ActionTypeId:
      #       Category: Deploy
      #       Owner: AWS
      #       Provider: CodeDeploy
      #       Version: 1
      #     Configuration:
      #       ApplicationName: !Ref 'CodeDeployApplication'
      #       DeploymentGroupName: !Ref 'DeploymentGroup'
      #     InputArtifacts:
      #     - Name: !Sub '${ProjectId}-BuildArtifact'
      #     Name: Deploy
      #     RunOrder: 3
      #   Name: Deploy
    Type: AWS::CodePipeline::Pipeline
  S3ArtifactBucketPolicy:
    Description: Setting Amazon S3 bucket policy for AWS CodePipeline access
    Properties:
      Bucket: !Ref 'S3Bucket'
      PolicyDocument:
        Id: SSEAndSSLPolicy
        Statement:
        - Action:
          - s3:GetObject
          - s3:GetObjectVersion
          - s3:GetBucketVersioning
          Condition:
            Bool:
              aws:SecureTransport: false
          Effect: Allow
          Principal:
            AWS:
            - !GetAtt 'CodePipelineTrustRole.Arn'
            - !GetAtt 'CodeBuildRole.Arn'
            - !GetAtt 'CloudFormationTrustRole.Arn'
          Resource:
          - !Sub 'arn:aws:s3:::${S3Bucket}'
          - !Sub 'arn:aws:s3:::${S3Bucket}/*'
          Sid: WhitelistedGet
        - Action:
          - s3:PutObject
          Effect: Allow
          Principal:
            AWS:
            - !GetAtt 'CodePipelineTrustRole.Arn'
            - !GetAtt 'CodeBuildRole.Arn'
          Resource:
          - !Sub 'arn:aws:s3:::${S3Bucket}'
          - !Sub 'arn:aws:s3:::${S3Bucket}/*'
          Sid: WhitelistedPut
        Version: 2012-10-17
    Type: AWS::S3::BucketPolicy
  S3Bucket:
    DeletionPolicy: Retain
    Description: Creating Amazon S3 bucket for AWS CodePipeline artifacts
    Properties:
      BucketName: !Join
      - '-'
      - - aws
        - codestar
        - !Ref 'AWS::Region'
        - !Ref 'AWS::AccountId'
        - !Ref 'ProjectId'
        - pipe
      Tags:
      - Key: Name
        Value: !Join
        - '-'
        - - !Ref 'ProjectId'
          - S3Bucket
      VersioningConfiguration:
        Status: Enabled
    Type: AWS::S3::Bucket
  # SeedRepo:
  #   DeletionPolicy: Retain
  #   DependsOn:
  #   - CodeCommitRepo
  #   Description: Adding application source code to the AWS CodeCommit repository for the project
  #   Properties:
  #     DefaultBranchName: master
  #     ProjectId: !Ref 'ProjectId'
  #     ProjectTemplateId: arn:aws:codestar:eu-west-1::project-template/codecommit/webapp-nodeexpress-ec2
  #     RepositoryProvider: CodeCommit
  #     RepositoryURL: !GetAtt
  #     - CodeCommitRepo
  #     - CloneUrlHttp
  #   Type: AWS::CodeStar::SeedRepository
  SourceEvent:
    Properties:
      Description: Rule for Amazon CloudWatch Events to detect changes to the source repository and trigger pipeline execution
      EventPattern:
        detail:
          event:
          - referenceCreated
          - referenceUpdated
          referenceName:
          - master
          referenceType:
          - branch
        detail-type:
        - CodeCommit Repository State Change
        resources:
        - !GetAtt 'CodeCommitRepo.Arn'
        source:
        - aws.codecommit
      Name: !Join
      - '-'
      - - awscodestar
        - !Ref 'ProjectId'
        - SourceEvent
      State: ENABLED
      Targets:
      - Arn: !Join
        - ':'
        - - arn
          - aws
          - codepipeline
          - !Ref 'AWS::Region'
          - !Ref 'AWS::AccountId'
          - !Join
            - '-'
            - - !Ref 'ProjectId'
              - Pipeline
        Id: ProjectPipelineTarget
        RoleArn: !GetAtt 'SourceEventRole.Arn'
    Type: AWS::Events::Rule
  SourceEventRole:
    Description: IAM role to allow Amazon CloudWatch Events to trigger AWS CodePipeline execution
    Properties:
      AssumeRolePolicyDocument:
        Statement:
        - Action: sts:AssumeRole
          Effect: Allow
          Principal:
            Service:
            - events.amazonaws.com
          Sid: 1
      Policies:
      - PolicyDocument:
          Statement:
          - Action:
            - codepipeline:StartPipelineExecution
            Effect: Allow
            Resource:
            - !Join
              - ':'
              - - arn
                - aws
                - codepipeline
                - !Ref 'AWS::Region'
                - !Ref 'AWS::AccountId'
                - !Join
                  - '-'
                  - - !Ref 'ProjectId'
                    - Pipeline
        PolicyName: CodeStarWorkerCloudWatchEventPolicy
      RoleName: !Join
      - '-'
      - - CodeStarWorker
        - !Ref 'ProjectId'
        - CloudWatchEventRule
    Type: AWS::IAM::Role
  # SyncInitialResources:
  #   DependsOn:
  #   - SeedRepo
  #   Description: Adding the AWS CodeCommit repository to your AWS CodeStar project.
  #   Properties:
  #     ProjectId: !Ref 'ProjectId'
  #   Type: AWS::CodeStar::SyncResources
  #   Version: 1.0
  # SyncResources:
  #   DependsOn:
  #   - SeedRepo
  #   - DeploymentGroup
  #   - CodeDeployApplication
  #   - ProjectPipeline
  #   - SyncInitialResources
  #   Description: Adding all created resources to your AWS CodeStar project
  #   Properties:
  #     ProjectId: !Ref 'ProjectId'
  #   Type: AWS::CodeStar::SyncResources
  #   Version: 1.0
  WebAppInstanceProfile:
    Description: Creating Amazon EC2 instance profile for instances
    Properties:
      Path: /
      Roles:
      - !Ref 'WebAppRole'
    Type: AWS::IAM::InstanceProfile
  WebAppRole:
    Description: Creating service role in IAM for Amazon EC2 instances
    Properties:
      AssumeRolePolicyDocument:
        Statement:
        - Action: sts:AssumeRole
          Effect: Allow
          Principal:
            Service: ec2.amazonaws.com
          Sid: ''
      Path: /
      RoleName: !Sub 'CodeStarWorker-${ProjectId}-WebApp'
    Type: AWS::IAM::Role
  WebAppRolePolicies:
    Description: Setting IAM policy for service role for Amazon EC2 instances
    Properties:
      PolicyDocument:
        Statement:
        - Action:
          - ec2:Describe*
          Effect: Allow
          Resource:
          - '*'
        - Action:
          - s3:Get*
          - s3:List*
          Effect: Allow
          Resource:
          - !Sub 'arn:aws:s3:::aws-codedeploy-${AWS::Region}*'
          - !Sub 'arn:aws:s3:::${S3Bucket}'
          - !Sub 'arn:aws:s3:::${S3Bucket}/*'
        - Action:
          - s3:GetObject
          Effect: Allow
          Resource:
          - !Sub 'arn:aws:s3:::aws-codestar-${AWS::Region}-${AWS::AccountId}/${ProjectId}/ssh/*'
          - arn:aws:s3:::awscodestar-remote-access-signatures-eu-west-1/*
          - arn:aws:s3:::awscodestar-remote-access-eu-west-1/*
        - Action:
          - cloudformation:DescribeStackResources
          Effect: Allow
          Resource:
          - !Ref 'AWS::StackId'
        - Action:
          - codedeploy:BatchGet*
          - codedeploy:Get*
          - codedeploy:List*
          Effect: Allow
          Resource:
          - !Sub 'arn:aws:codedeploy:${AWS::Region}:${AWS::AccountId}:application:${CodeDeployApplication}'
          - !Sub 'arn:aws:codedeploy:${AWS::Region}:${AWS::AccountId}:deploymentgroup:${CodeDeployApplication}/${DeploymentGroup}'
          - !Sub 'arn:aws:codedeploy:${AWS::Region}:${AWS::AccountId}:deploymentconfig:*'
      PolicyName: CodeStarWorkerBackendPolicy
      Roles:
      - !Ref 'WebAppRole'
    Type: AWS::IAM::Policy
    
Outputs:
  WebProfile:
    Description: Web profile Arn for instances
    Value: !Ref WebAppInstanceProfile
    Export:
      Name: WebProfile